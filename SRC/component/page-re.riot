<page-re>
  <page-layout>
    Pattern<br/>
    / <input type='text' id='Pattern'/> / <input type='text' id='ExtraOption'/><br/><br/>

    Test String<br/>
    <textarea id='TestString' rows='3'></textarea>
    <button onclick={RETest}>Test</button><br/><br/>

    Report: <span id='Report'>?</span><br/>
    <textarea id='MatchList' rows='5'></textarea><br/><br/>

    Reference:<br/>
    <a href='http://www.rubular.com/' target='_blank'>Rubular</a>
  </page-layout>
  <style type='scss'>
    :host {
      #Pattern { min-width: 355px; }
      #ExtraOption { width: 50px; }
      #TestString, #MatchList { min-width: 380px; }
      #Report { color: #ff0000; }
    }
  </style>
  <script>
    import pageLayout from './page-layout.riot';

    export default {
      components: { pageLayout },

      /* find all substr matched the regular expression pattern.
        'Ptn' = Pattern, can be a RegExp Object, or a String.
        'Str' = String for testing.
        'ExtOpt' = Extra option, ex: 'g' or 'gi'...
        Return: array of match, [] as error. */
      REMatch (Ptn, Str, ExtOpt) {
        if ((typeof Ptn != 'function' && //for chrome, a RegExp is a function.
            typeof Ptn != 'object' && typeof Ptn != 'string') || typeof Str != 'string') {
          return [];
        }

        if (typeof ExtOpt !== 'string') { ExtOpt = ''; }

        const RE = new RegExp(Ptn, ExtOpt);
        const Mch = Str.match(RE);

        if (typeof Mch !== 'object' || Mch === null) { return []; }

        let Rst = [];

        if (typeof Mch[1] === 'string') { Rst = Mch; }
        else { Rst.push(Mch[0]); }

        return Rst;
      },

      RETest () {
        const Ptn = document.getElementById('Pattern').value,
              Ext = document.getElementById('ExtraOption').value,
              Str = document.getElementById('TestString').value,
              Rpt = document.getElementById('Report');
        const MchLst = this.REMatch(Ptn, Str, Ext);

        let Mch = document.getElementById('MatchList');

        if (MchLst.length === 0) {
          Rpt.innerText ? (Rpt.innerText = 'false') : (Rpt.textContent = 'false'); // for both IE & FireFox compatible.

          Mch = '';

          return;
        }

        Rpt.innerText ? (Rpt.innerText = 'true') : (Rpt.textContent = 'true');

        Mch.value = MchLst.join("\n");
      }
    }
  </script>
</page-re>
